<!DOCTYPE html>
<html lang="<%= lng %>">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= t('title') %></title>
    <style>
        :root {
            --bg-color: #ffffff;
            --text-color: #000000;
            --item-bg: #f5f5f5;
        }

        [data-theme="dark"] {
            --bg-color: #1a1a1a;
            --text-color: #ffffff;
            --item-bg: #2d2d2d;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
        }

        .completed { text-decoration: line-through; color: #888; }
        .todo-item { 
            display: flex; 
            align-items: center; 
            gap: 10px; 
            margin: 10px 0;
            background-color: var(--item-bg);
            padding: 10px;
            border-radius: 5px;
        }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        
        .top-controls {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            gap: 20px;
            align-items: center;
        }

        .language-switcher select { 
            padding: 5px;
            background-color: var(--bg-color);
            color: var(--text-color);
            border: 1px solid var(--text-color);
        }

        .theme-switch {
            display: flex;
            align-items: center;
        }

        .theme-switch-toggle {
            position: relative;
            width: 60px;
            height: 30px;
            background-color: #83d8ff;
            border-radius: 15px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .theme-switch-toggle[data-theme="dark"] {
            background-color: #4a4a4a;
        }

        .theme-switch-toggle::before {
            content: '‚òÄÔ∏è';
            position: absolute;
            left: 5px;
            top: 5px;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            transition: transform 0.3s;
        }

        .theme-switch-toggle[data-theme="dark"]::before {
            content: 'üåô';
            transform: translateX(30px);
        }

        button {
            background-color: var(--item-bg);
            color: var(--text-color);
            border: 1px solid var(--text-color);
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        input[type="text"] {
            background-color: var(--bg-color);
            color: var(--text-color);
            border: 1px solid var(--text-color);
            padding: 5px;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="top-controls">
            <div class="theme-switch">
                <div id="themeToggle" class="theme-switch-toggle" onclick="toggleTheme()"></div>
            </div>
            <div class="language-switcher">
                <select id="languageSelect" onchange="changeLanguage(this.value)">
                    <option value="en" <%= lng === 'en' ? 'selected' : '' %>>English</option>
                    <option value="zh-TW" <%= lng === 'zh-TW' ? 'selected' : '' %>>ÁπÅÈ´î‰∏≠Êñá</option>
                </select>
            </div>
        </div>

        <h1><%= t('title') %></h1>
        
        <form id="todoForm" onsubmit="return addTodo(event)">
            <input type="text" id="todoInput" placeholder="<%= t('addTodo') %>" required>
            <button type="submit"><%= t('add') %></button>
        </form>

        <div id="todoList" class="todo-list">
            <!-- Todos will be inserted here by JavaScript -->
        </div>
    </div>

    <script>
        // Initialize todos from localStorage or empty array
        let todos = JSON.parse(localStorage.getItem('todos') || '[]');
        const translations = {
            en: <%- JSON.stringify(i18n.getResourceBundle('en', 'translation')) %>,
            'zh-TW': <%- JSON.stringify(i18n.getResourceBundle('zh-TW', 'translation')) %>
        };
        let currentLang = '<%= lng %>';

        // Theme handling
        const theme = localStorage.getItem('theme') || 'light';
        document.documentElement.setAttribute('data-theme', theme);
        document.getElementById('themeToggle').setAttribute('data-theme', theme);

        function toggleTheme() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            
            document.documentElement.setAttribute('data-theme', newTheme);
            document.getElementById('themeToggle').setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
        }

        function t(key) {
            return translations[currentLang][key] || key;
        }

        function changeLanguage(lang) {
            window.location.href = `?lng=${lang}`;
        }

        function saveTodos() {
            localStorage.setItem('todos', JSON.stringify(todos));
        }

        function renderTodos() {
            const todoList = document.getElementById('todoList');
            if (todos.length === 0) {
                todoList.innerHTML = `<div>${t('empty')}</div>`;
                return;
            }
            todoList.innerHTML = todos.map((todo, index) => `
                <div class="todo-item">
                    <input type="checkbox" 
                           ${todo.completed ? 'checked' : ''} 
                           onchange="toggleTodo(${index})">
                    <span class="${todo.completed ? 'completed' : ''}">${todo.title}</span>
                    <button onclick="deleteTodo(${index})">${t('delete')}</button>
                </div>
            `).join('');
        }

        function addTodo(event) {
            event.preventDefault();
            const input = document.getElementById('todoInput');
            const title = input.value.trim();
            
            if (title) {
                todos.push({
                    title,
                    completed: false,
                    createdAt: new Date().toISOString()
                });
                saveTodos();
                renderTodos();
                input.value = '';
            }
            return false;
        }

        function toggleTodo(index) {
            todos[index].completed = !todos[index].completed;
            saveTodos();
            renderTodos();
        }

        function deleteTodo(index) {
            todos.splice(index, 1);
            saveTodos();
            renderTodos();
        }

        // Initial render
        renderTodos();
    </script>
</body>
</html>